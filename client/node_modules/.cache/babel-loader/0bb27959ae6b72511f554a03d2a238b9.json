{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdelrahman Ashraf\\\\Desktop\\\\Blog\\\\client\\\\src\\\\components\\\\singlePost\\\\Singlepost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { context } from '../../context/Context';\nimport './singlepost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Singlepost() {\n  _s();\n\n  const PF = \"http://localhost:5000/images/\";\n  const loc = useLocation();\n  const path = loc.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(`http://localhost:5000/blog/posts/${path}`);\n      setPost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`http://localhost:5000/blog/posts/${path}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace('/');\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlepost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.title,\n        className: \"singlePostTitleInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fas fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fas fa-trash\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: `/?user=${post.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Singlepost, \"Wb1ZwaxzuPDJjyY9IP49MI6u3kg=\", false, function () {\n  return [useLocation];\n});\n\n_c = Singlepost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singlepost\");","map":{"version":3,"sources":["C:/Users/Abdelrahman Ashraf/Desktop/Blog/client/src/components/singlePost/Singlepost.jsx"],"names":["axios","useContext","useEffect","useState","Link","useLocation","context","Singlepost","PF","loc","path","pathname","split","post","setPost","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","username","window","location","replace","error","photo","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { context } from '../../context/Context';\r\nimport './singlepost.css'\r\n\r\nexport default function Singlepost() {\r\n    const PF =\"http://localhost:5000/images/\";\r\n    const loc = useLocation();\r\n    const path = loc.pathname.split(\"/\")[2];\r\n    const [post, setPost] = useState({});\r\n    const {user} = useContext(context);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [updateMode, setUpdateMode] = useState(false)\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const getPost = async () =>{\r\n            const res = await axios.get(`http://localhost:5000/blog/posts/${path}`);\r\n            setPost(res.data);\r\n        };\r\n        getPost();\r\n    }, [path]);\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/blog/posts/${path}`,{\r\n                data:{username: user.username},\r\n            });\r\n            window.location.replace('/')   \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"singlepost\">\r\n            <div className=\"singlePostWrapper\">\r\n                {post.photo && \r\n                    <img   \r\n                        src={PF + post.photo} \r\n                        alt=\"\" \r\n                        className=\"singlePostImg\"\r\n                    />\r\n                }{\r\n                    updateMode ? <input type=\"text\" value={post.title} className=\"singlePostTitleInput\"/> :\r\n    \r\n                    <h1 className=\"singlePostTitle\">\r\n                        {post.title}\r\n                        {post.username === user?.username && (\r\n                            <div className=\"singlePostEdit\">\r\n                                <i className=\"singlePostIcon fas fa-edit\" onClick={() => setUpdateMode(true)}/>\r\n                                <i className=\"singlePostIcon fas fa-trash\" onClick={handleDelete}></i>\r\n                            </div>\r\n                        )}\r\n                    \r\n                    </h1>\r\n                }\r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">\r\n                        Author: \r\n                        <Link className=\"link\" to={`/?user=${post.username}`}>\r\n                            <b>{post.username}</b>\r\n                        </Link>\r\n                    </span>\r\n                    <span className=\"singlePostDate\">{new Date(post.createdAt).toDateString()}</span>\r\n                </div>\r\n                {   updateMode ? <textarea/> :\r\n                    <p className=\"singlePostDesc\"> \r\n                        {post.desc}\r\n                    </p>\r\n                }           \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}